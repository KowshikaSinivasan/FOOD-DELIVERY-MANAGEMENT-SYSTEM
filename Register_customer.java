import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;
import java.util.Random;



public class Register_customer extends javax.swing.JFrame {
	
	
	
	public static String cid;
	Connection con=MyConnection.getConnection();
    public Register_customer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        phone1 = new javax.swing.JLabel();
        block = new javax.swing.JTextField();
        street = new javax.swing.JTextField();
        area = new javax.swing.JTextField();
        pincode = new javax.swing.JTextField();
        login = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel1.setText("Join the Foodie Community!");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Your Name:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Email:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Password: ");

        password.setText("jPasswordField1");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Phone : ");

        phone1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        phone1.setText("Address :");

        block.setText("block");

        street.setText("street");

        area.setText("area");

        pincode.setText("pincode");

        login.setBackground(new java.awt.Color(0, 204, 102));
        login.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(password))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(phone1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(area, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                    .addComponent(block))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(street, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pincode)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phone1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(block, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(street, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(login)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {                                      
    	try
		{
			Statement st = con.createStatement();
			String query="CREATE TABLE CUSTOMER_INFO (\r\n"
					+ "    Name VARCHAR(40) NOT NULL,\r\n"
					+ "    Cid VARCHAR(11) CONSTRAINT Cid_check CHECK(Cid LIKE 'C%'),\r\n"
					+ "    password VARCHAR(50) CONSTRAINT password_check CHECK(length(password)>8),\r\n"
					+ "    phone NUMBER(10) UNIQUE,\r\n"
					+ "    email VARCHAR(40),\r\n"
					+ "    Cpoints NUMBER,\r\n"
					+ "    Mid VARCHAR(50),\r\n"
					+ "    PRIMARY KEY (Cid)\r\n"
					+ ")";

			st.executeUpdate(query);
			
			Statement st1 = con.createStatement();
			String query1="CREATE TABLE CUSTOMER_ADDRESS (\r\n"
					+ "    Aid VARCHAR(12) CHECK (Aid LIKE 'CA%') PRIMARY KEY,\r\n"
					+ "    block VARCHAR(20),\r\n"
					+ "    street VARCHAR(30),\r\n"
					+ "    area VARCHAR(40),\r\n"
					+ "    pincode NUMBER(6)\r\n"
					+ ")";

			st1.executeUpdate(query1);
			
			Statement st2 = con.createStatement();
			String query2="CREATE TABLE CUST_ADD_MAP (\r\n"
					+ "     Aid VARCHAR(12) CHECK (Aid LIKE 'CA%'),\r\n"
					+ "     Cid VARCHAR(11) CHECK (Cid LIKE 'C%'),\r\n"
					+ "     PRIMARY KEY (Aid, Cid)\r\n"
					+ ")";

			st2.executeUpdate(query2);
			
			
		}
		catch(SQLException e)
		{
			//System.out.println(e);
		}
    	
    	 String query="INSERT INTO CUSTOMER_INFO (Name, Cid, password, phone, email, Cpoints, Mid) VALUES (?, ?, ?, ?, ?, ?, ?)";
    	 String name_cust= name.getText();
         String email_cust= email.getText();
     	 String pass=String.valueOf(password.getPassword());
     	 String phone_cust= phone.getText();
     	String block_cust= block.getText();
     	String street_cust= street.getText();
     	String area_cust= area.getText();
     	String pincode_cust= pincode.getText();
    	
     	if ( name_cust.length()==0 || email_cust.length()==0 || email_cust.length()==0 || phone_cust.length()==0 
     			||block_cust.length()==0||street_cust.length()==0||area_cust.length()==0||pincode_cust.length()==0)
     	{
     		JOptionPane.showMessageDialog(null,"Please fill out all fields.");
     	}
     	else if (pass.length()<8)
     		JOptionPane.showMessageDialog(null,"Password must be atleast 8 characters long");
     	else if (phone_cust.length()!=10)
     		JOptionPane.showMessageDialog(null,"Invalid Phone number");
     	else if (pincode_cust.length()!=6)
     		JOptionPane.showMessageDialog(null,"Invalid Pincode");
     	else
     	{
     		int flag=0;
     		//CUSTOMER_INFO
     		PreparedStatement ps;
    		String cid_trial=IdGenerator.generateCustomerId();
    		String aid_trial=IdGenerator.generateAddressId();
    		try
            {
                ps=MyConnection.getConnection().prepareStatement(query);
                
                ps.setString(1,name_cust);
                ps.setString(2,cid_trial);
                ps.setString(3,pass);
                ps.setString(4,phone_cust);
                ps.setString(5,email_cust);
                ps.setLong(6, 0);
                ps.setString(7,"null");
                    
                if (ps.executeUpdate()>0)
                {
                	//JOptionPane.showMessageDialog(null,"Login Successful!\nDelicious Food Delivered to You");
                    cid=cid_trial;
                    System.out.println("CUSTOMER ID : "+cid);
                    
                }
            }
            catch(SQLException e)
            {
            	flag=1;
            	//JOptionPane.showMessageDialog(null,"An error occurred during login.\nPlease try again shortly.");
            	System.out.println(e);
            }
    		
    		//CUSTOMER_ADDress
    		PreparedStatement ps1;
    		
            String query1="INSERT INTO CUSTOMER_ADDRESS (Aid, block, street, area, pincode) VALUES (?, ?, ?, ?, ?)";
            try
            {
                ps1=MyConnection.getConnection().prepareStatement(query1);
                
                ps1.setString(1,aid_trial);
                ps1.setString(2,block_cust);
                ps1.setString(3,street_cust);
                ps1.setString(4,area_cust);
                ps1.setString(5,pincode_cust);
                
                   
                if (ps1.executeUpdate()>0)
                {
                    //JOptionPane.showMessageDialog(null,"");
                	System.out.println("ADDRESS ID : "+aid_trial);
                }
                
                
            }
            catch(SQLException e)
            {
            	flag=1;
            	//JOptionPane.showMessageDialog(null,"An error occurred during login.\nPlease try again shortly.");
            	System.out.println("customer address :"+e);
            }
            
            //CUSTOMER_ADD_MAP
            PreparedStatement ps2;
    		
            String query2="INSERT INTO CUST_ADD_MAP (Aid, Cid) VALUES (?, ?)";
            		
            try
            {
                ps2=MyConnection.getConnection().prepareStatement(query2);
                
                ps2.setString(1,aid_trial);
                ps2.setString(2,cid_trial);
               
                
                   
                if (ps2.executeUpdate()>0)
                {
                	//JOptionPane.showMessageDialog(null,"Login Successful!\nDelicious Food Delivered to You");
                
                }
                
                
            }
            catch(SQLException e)
            {
            	flag=1;
            	//JOptionPane.showMessageDialog(null,"An error occurred during login.\nPlease try again shortly.");
            	System.out.println("cust_add_map "+ e);
            }
            if (flag==0)
            	{JOptionPane.showMessageDialog(null,"Welcome!\nDelicious Food Delivered to You");
            	Customer_panel l = new Customer_panel();
             	this.dispose();
             	l.setVisible(true);
            	
            	}
            else
            	JOptionPane.showMessageDialog(null,"An error occurred during login.\nPlease try again shortly.");
     	}
    	
    	
    	
    	
    	
    	
       
        
    }  //login action ends                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register_customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register_customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register_customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register_customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register_customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField area;
    private javax.swing.JTextField block;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JButton login;
    private javax.swing.JTextField name;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phone;
    private javax.swing.JLabel phone1;
    private javax.swing.JTextField pincode;
    private javax.swing.JTextField street;
    // End of variables declaration                   
}
