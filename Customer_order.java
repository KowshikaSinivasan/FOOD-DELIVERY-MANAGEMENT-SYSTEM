import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Types;
import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Customer_order extends javax.swing.JFrame {

    String cid=LoginPage.cid;
    String oid=Customer_search.oid;
    //String oid="O923454644138052";
    String rid=Customer_search.rid;
    Connection con=MyConnection.getConnection();
    String iid;
    double price;
    public Customer_order() {
    	
        initComponents();
        filltable();
        calccost();
           
    }
    
    public void filltable()
    {
    	jTable1.setModel(new DefaultTableModel(null, new String[] {"Item","Quantity","Price","Final Price"}));
    	String q="select * from order_details where oid='"+oid+"'";
        try
        {
        	Statement st1=con.createStatement();
    		ResultSet rs1=st1.executeQuery(q);
    		System.out.println("hi");
    		while(rs1.next())
    		{
    			//System.out.println(rs1.getString("iid"));
    			String q1="select * from item where iid='"+rs1.getString("iid")+"'";
    			Statement st2=con.createStatement();
    			ResultSet rs2=st2.executeQuery(q1);
    			rs2.next();
    			Object tbdata[]= {rs2.getString("iname"),rs1.getInt("qty"),rs1.getInt("price"),rs1.getInt("qty")*rs1.getInt("price")};
    			DefaultTableModel tblModel=(DefaultTableModel) jTable1.getModel();
    			tblModel.addRow(tbdata);
    		}
        }
        catch(Exception e)
        {
        	
        }
    }
    
    public double calccost()
    {
    	jTextArea1.setText("");
    	String sql = "{call calculate_total_price(?, ?)}";
    	CallableStatement cstmt = null;
    	double totalPrice=0;
    	try
    	{
    		 cstmt = con.prepareCall(sql);
    		 cstmt.setString(1, oid);

             // Register the output parameter (total price)
             cstmt.registerOutParameter(2, Types.DOUBLE);

             // Execute the procedure
             cstmt.execute();

             // Retrieve the output parameter value
             totalPrice = cstmt.getDouble(2);
             price=totalPrice;
    	}
    	catch(Exception e)
    	{
    		
    	}
    	
    	jTextArea1.setText("Your Total Cost "+totalPrice);
    	return totalPrice;
    }
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	 jPanel1 = new javax.swing.JPanel();
         jPanel2 = new javax.swing.JPanel();
         jLabel1 = new javax.swing.JLabel();
         jScrollPane1 = new javax.swing.JScrollPane();
         jTable1 = new javax.swing.JTable();
         back_button = new javax.swing.JButton();
         remove = new javax.swing.JTextField();
         jScrollPane2 = new javax.swing.JScrollPane();
         jTextArea1 = new javax.swing.JTextArea();
         remove_button = new javax.swing.JButton();
         place = new javax.swing.JButton();
         qty = new javax.swing.JComboBox<>();

         setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

         jPanel2.setBackground(new java.awt.Color(51, 51, 51));

         jLabel1.setBackground(new java.awt.Color(255, 255, 255));
         jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
         jLabel1.setForeground(new java.awt.Color(255, 255, 255));
         jLabel1.setText("Your Cart");

         jTable1.setBackground(new java.awt.Color(204, 204, 204));
         jTable1.setModel(new javax.swing.table.DefaultTableModel(
             new Object [][] {

             },
             new String [] {
                 "Item", "Quantity", "Price", "Final price"
             }
         ) {
             boolean[] canEdit = new boolean [] {
                 false, false, false, false
             };

             public boolean isCellEditable(int rowIndex, int columnIndex) {
                 return canEdit [columnIndex];
             }
         });
         jScrollPane1.setViewportView(jTable1);

         back_button.setBackground(new java.awt.Color(255, 102, 102));
         back_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
         back_button.setText("Return to menu");
         back_button.addActionListener(new java.awt.event.ActionListener() {
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 back_buttonActionPerformed(evt);
             }
         });

         remove.setBackground(new java.awt.Color(255, 255, 102));
         remove.setText("Enter item to remove");

         jTextArea1.setBackground(new java.awt.Color(102, 153, 255));
         jTextArea1.setColumns(20);
         jTextArea1.setRows(5);
         jScrollPane2.setViewportView(jTextArea1);

         remove_button.setBackground(new java.awt.Color(204, 204, 255));
         remove_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
         remove_button.setText("Remove");
         remove_button.addActionListener(new java.awt.event.ActionListener() {
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 remove_buttonActionPerformed(evt);
             }
         });

         place.setBackground(new java.awt.Color(51, 204, 0));
         place.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
         place.setText("Place Order");
         place.addActionListener(new java.awt.event.ActionListener() {
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 placeActionPerformed(evt);
             }
         });

         qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

         javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
         jPanel2.setLayout(jPanel2Layout);
         jPanel2Layout.setHorizontalGroup(
             jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addGroup(jPanel2Layout.createSequentialGroup()
                 .addGap(27, 27, 27)
                 .addComponent(back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                 .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addGap(69, 69, 69)
                 .addComponent(remove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                 .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addGap(23, 23, 23))
             .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                 .addContainerGap(103, Short.MAX_VALUE)
                 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addGroup(jPanel2Layout.createSequentialGroup()
                         .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGap(88, 88, 88)
                         .addComponent(place, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGap(34, 34, 34))
                     .addGroup(jPanel2Layout.createSequentialGroup()
                         .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(remove_button)
                         .addGap(23, 23, 23))))
         );
         jPanel2Layout.setVerticalGroup(
             jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addGroup(jPanel2Layout.createSequentialGroup()
                 .addGap(20, 20, 20)
                 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(jLabel1)
                     .addComponent(back_button)
                     .addComponent(remove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(jPanel2Layout.createSequentialGroup()
                         .addGap(18, 18, 18)
                         .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(jPanel2Layout.createSequentialGroup()
                         .addGap(33, 33, 33)
                         .addComponent(remove_button)))
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                 .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                     .addComponent(place, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                 .addGap(23, 23, 23))
         );

         javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
         jPanel1.setLayout(jPanel1Layout);
         jPanel1Layout.setHorizontalGroup(
             jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         );
         jPanel1Layout.setVerticalGroup(
             jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         );

         javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
         getContentPane().setLayout(layout);
         layout.setHorizontalGroup(
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         );
         layout.setVerticalGroup(
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
             .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         );

         pack();
    }// </editor-fold>                        

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	Customer_search l = new Customer_search();
     	this.dispose();
     	l.setVisible(true);
    }                                           

    private void remove_buttonActionPerformed(java.awt.event.ActionEvent evt) {     
    	CallableStatement cstmt = null;
    	String quant = (String) qty.getSelectedItem();
    	String item = remove.getText();
    	
    	 try {
             String sql = "{CALL get_item_id(?, ?)}";
             cstmt = con.prepareCall(sql);
             cstmt.setString(1, item);
             cstmt.registerOutParameter(2, java.sql.Types.VARCHAR);

             cstmt.execute();

             iid = cstmt.getString(2);
             System.out.println(iid);
    	 }
    	 catch(Exception e)
    	 {
    		 JOptionPane.showMessageDialog(null,"No Item found like that!");
    	 }
    	 String qu="select * from order_details where iid='"+iid+"' and oid='"+oid+"'";
    	 String origquant=null;
    	 try {
    		    // Create a statement
    		    Statement stmt = con.createStatement();
    		    
    		    // Execute the query
    		    ResultSet rs = stmt.executeQuery(qu);
    		    rs.next();
    		    origquant=rs.getString("qty");
    		    System.out.println(quant+ " " + origquant);
    	 }
    	 catch(Exception e) {
    		 
    	 }
    	 int result = quant.compareTo(origquant);
    	 if (result==0)
    	 {
    		 String deleteQuery = "DELETE FROM ORDER_DETAILS WHERE Oid = ? AND Iid = ?";
        	 try {
        		 String iid_local=iid;
        		 PreparedStatement statement = con.prepareStatement(deleteQuery);
        		 statement.setString(1, oid);
        		 statement.setString(2, iid_local);
        		    
        		    int rowsAffected = statement.executeUpdate();
        		    if (rowsAffected > 0) 
        		    	 JOptionPane.showMessageDialog(null,"Item removed");
        		    else
        		    	JOptionPane.showMessageDialog(null,"Item not found");
        		filltable();
        		calccost();
        	 }
        	 catch(Exception e)
        	 {
        		 
        	 }
    	 }
    	 else if (result<0)
    	 {
    		 int quantInt = Integer.parseInt(quant);
    		 int origquantInt = Integer.parseInt(origquant);
    		 int resultInt = origquantInt-quantInt;
    		 String ans = Integer.toString(resultInt);
    		 System.out.println(ans);
    		 String deleteQuery = "UPDATE ORDER_DETAILS SET QTY=? WHERE Oid = ? AND Iid = ?";
        	 try {
        		 String iid_local=iid;
        		 PreparedStatement statement = con.prepareStatement(deleteQuery);
        		 statement.setString(1, ans);
        		 statement.setString(2, oid);
        		 statement.setString(3, iid_local);
        		    
        		    int rowsAffected = statement.executeUpdate();
        		    if (rowsAffected > 0) 
        		    	 JOptionPane.showMessageDialog(null,"Item removed");
        		    else
        		    	JOptionPane.showMessageDialog(null,"Item not found");
        		filltable();
        		calccost();
        	 }
        	 catch(Exception e)
        	 {
        		 
        	 }
    	 }
    	 
    	 
    	 
    } 
    
    
    private void placeActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    	
    	
    	String query = "UPDATE ORDERS SET CID = ?, RID = ?, DID = ?, STATUS = ?, ORDER_DATE_TIME = ?, DEL_DATE_TIME = ?, ORATING = ?, PRICE = ? WHERE OID = ?";

    	try {
    	    // Creating prepared statement
    	    PreparedStatement pstmt = con.prepareStatement(query);
    	    LocalDateTime currentDateTime = LocalDateTime.now();
    	    String dateTimeString = currentDateTime.toString();
    	    // Setting parameters
    	    pstmt.setString(1, cid);
    	    pstmt.setString(2, rid);
    	    pstmt.setString(3, "D11630694");
    	    pstmt.setString(4, "1");
    	    pstmt.setString(5, dateTimeString);
    	    pstmt.setNull(6, java.sql.Types.VARCHAR); // Assuming DEL_DATE_TIME is allowed to be NULL
    	    pstmt.setInt(7, 0);
    	    pstmt.setDouble(8, price);
    	    pstmt.setString(9, oid);
    	    
    	    int rowsAffected = pstmt.executeUpdate();
    	    
    	    if (rowsAffected > 0) {
    	        JOptionPane.showMessageDialog(null, "Order details updated successfully!");
    	        Customer_panel l = new Customer_panel();
             	this.dispose();
             	l.setVisible(true);
    	    } else {
    	        //JOptionPane.showMessageDialog(null, "No rows were updated.");
    	    }
    	} catch (Exception e) {
    	    //JOptionPane.showMessageDialog(null, "Error occurred: " + e.getMessage());
    	}

    	
    }  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer_order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton back_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton place;
    private javax.swing.JComboBox<String> qty;
    private javax.swing.JTextField remove;
    private javax.swing.JButton remove_button;
    // End of variables declaration                   
}
