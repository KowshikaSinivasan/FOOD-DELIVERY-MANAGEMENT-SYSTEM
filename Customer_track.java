import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Customer_track extends javax.swing.JFrame {

    Connection con=MyConnection.getConnection();
    String cid=LoginPage.cid;
    //String cid="C34457598";
    
   
    public Customer_track() {
        initComponents();
        System.out.println(cid);
        filltable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        deets = new javax.swing.JButton();
        order = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        revert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("TRACK ORDERS");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Id", "Restaurant", "Date Of Order", "Arriving in", "Amount", "Status", "Did"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Enter Driver Id");

        deets.setBackground(new java.awt.Color(204, 255, 255));
        deets.setText("Driver Details");
        deets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deetsActionPerformed(evt);
            }
        });

        order.setBackground(new java.awt.Color(255, 102, 102));
        order.setText("Order Details");
        order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(0, 51, 153));
        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("Enter Order Id");

        cancel.setBackground(new java.awt.Color(204, 0, 0));
        cancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setText("Cancel Order");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        revert.setBackground(new java.awt.Color(102, 0, 102));
        revert.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        revert.setForeground(new java.awt.Color(255, 255, 255));
        revert.setText("View Order History");
        revert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(order)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(deets, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(cancel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(revert)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deets)
                    .addComponent(order)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(revert)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>  
    
    
    public void filltable()
    {
    	jTable1.setModel(new DefaultTableModel(null, new String[] {"Order Id", "Restaurant", "Date Of Order", "Arriving in", "Amount", "Status", "Did"}));
    	try {
    	    // Prepare the SELECT query
    	    String query = "SELECT * FROM ORDERS where cid='"+cid+"'";
    	    
    	    // Create a statement
    	    Statement statement = con.createStatement();
    	    
    	    // Execute the query and get the result set
    	    ResultSet resultSet = statement.executeQuery(query);
    	    
    	    resultSet.next();
    	    String oid = resultSet.getString("OID");
    	    String cid = resultSet.getString("CID");
    	    String rid = resultSet.getString("RID");
    	    String did = resultSet.getString("DID");
    	    String status = resultSet.getString("STATUS");
    	    String date=resultSet.getString("order_date_time");
    	    String price=resultSet.getString("price");
    	        
    	        System.out.println("OID: " + oid + ", CID: " + cid + ", RID: " + rid + ", DID: " + did + ", STATUS: " + status);
    	        String sql = "{call get_restaurant_name(?, ?)}";
    	        String rname=null;
    	        try 
    	        {
    	        	CallableStatement stmt = con.prepareCall(sql);
    	            // Set the input parameter (restaurant ID)
    	            stmt.setString(1, rid);
    	            
    	            // Register the output parameter (restaurant name)
    	            stmt.registerOutParameter(2, java.sql.Types.VARCHAR);
    	            
    	            // Execute the stored procedure
    	            stmt.execute();
    	            
    	            // Get the output parameter value (restaurant name)
    	            rname = stmt.getString(2);
    	            System.out.println(rname);
    	        }
    	        catch(Exception e) {
    	        	
    	        }
    	        String arrive=null;
    	        if (status.equals("1"))
    	        {
    	        	status="arriving";arrive="45 mins";
    	        }
    	        	
    	        else if (status.equals("2"))
    	        {
    	        	status="delivered";arrive="arrived";
    	        }
    	        	
    	        
    	        Object tbdata[]= {oid,rname,date,arrive,price,status,did};
    			DefaultTableModel tblModel=(DefaultTableModel) jTable1.getModel();
    			tblModel.addRow(tbdata);
    	    
    	    // Close the statement and result set
    	    statement.close();
    	    resultSet.close();}
    	catch (SQLException e) {
    	    //e.printStackTrace();
    	}


    }
    
    
    private void deetsActionPerformed(java.awt.event.ActionEvent evt) {                                      
        String did=jTextField1.getText();
        String q="select * from driver_info where did='"+did+"'";
        try {
        	Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(q);
            rs.next();
            String dname=rs.getString("dname");
            String dphone=rs.getString("dphone");
            String demail=rs.getString("demail");
            String dr=rs.getString("dratings");
            String message = "Name: " + dname + "\n" +
                    "Phone: " + dphone + "\n" +
                    "Email: " + demail + "\n" +
                    "Ratings: " + dr;
            JOptionPane.showMessageDialog(null, message);
        }
        catch(Exception e)
        {
        	System.out.println(e);
        }
        
    	
    }  
    private void orderActionPerformed(java.awt.event.ActionEvent evt) {      
    	String oid=jTextField2.getText();
    	jTable1.setModel(new DefaultTableModel(null, new String[] {"Item","Quantity","Price","Final Price"}));
    	String q="select * from order_details where oid='"+oid+"'";
        try
        {
        	Statement st1=con.createStatement();
    		ResultSet rs1=st1.executeQuery(q);
    		System.out.println("hi");
    		while(rs1.next())
    		{
    			System.out.println(rs1.getString("iid"));
    			String q1="select * from item where iid='"+rs1.getString("iid")+"'";
    			Statement st2=con.createStatement();
    			ResultSet rs2=st2.executeQuery(q1);
    			rs2.next();
    			Object tbdata[]= {rs2.getString("iname"),rs1.getInt("qty"),rs1.getInt("price"),rs1.getInt("qty")*rs1.getInt("price")};
    			DefaultTableModel tblModel=(DefaultTableModel) jTable1.getModel();
    			tblModel.addRow(tbdata);
    		}
        }
        catch(Exception e)
        {
        	JOptionPane.showMessageDialog(null,"Invalid Order Id.");
        }
        //filltable();
    }     
    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
    	Customer_panel l = new Customer_panel();
     	this.dispose();
     	l.setVisible(true);
    }

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {                                       
    	String oid=jTextField2.getText();
    	String q1="select * from orders where oid='"+oid+"'";
    	try
        {
        	Statement st1=con.createStatement();
    		ResultSet rs1=st1.executeQuery(q1);
    		rs1.next();
    		if (rs1.getString("status").equals("2"))
    			JOptionPane.showMessageDialog(null,"Unfortunately, we're unable to cancel your order as it has already been shipped.");
    		else
    		{
    			String q="delete from order_details where oid = '"+oid+"'";
    			Statement st2=con.createStatement();
        		st2.executeQuery(q);
        		String q2="delete from orders where oid='"+oid+"'";
        		Statement st3=con.createStatement();
        		st3.executeQuery(q2);
        		JOptionPane.showMessageDialog(null,"Order canceled.");
    		}
        }
    	catch(Exception e)
    	{
    		
    	}
    	
    	
    }  
    
    private void revertActionPerformed(java.awt.event.ActionEvent evt) {                                       
        filltable();
    }  
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer_track.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer_track.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer_track.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer_track.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer_track().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton cancel;
    private javax.swing.JButton deets;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton order;
    private javax.swing.JButton revert;
    // End of variables declaration                   
}
